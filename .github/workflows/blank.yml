# This is a basic workflow to help you get started with Actions

name: package_test

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the geolite.clash.dev branch
  schedule:
   - cron:  '* * 7 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # 打印工作流程中的信息，定义: https://docs.github.com/en/free-pro-team@latest/actions/reference/environment-variables
      - name: Run a one-line script
        run: |
          echo ID ${GITHUB_RUN_ID}, REF ${GITHUB_REF}
          echo SHA ${GITHUB_SHA}, ACTOR ${GITHUB_REPOSITORY}, GITHUB_REPOSITORY ${GITHUB_REPOSITORY}
          
      # 克隆当前项目, 默认为 ${GITHUB_REPOSITORY}
      - name: clone project code
        uses: actions/checkout@v2

      # 设置 JDK 环境为 JDK1.8
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      # 使用 gradlew assembleRelease 打 release 包
      - name: Build with Gradle generate modules apks
        run: chmod +x gradlew &&./gradlew clean assembleRelease --stacktrace
        
      # 上传 first apk 到 github actions 的制品库
      - name: upload app to github Actions
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app/build/outputs/apk/release/geoip.clash.dev-release.apk
          
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: app/build/outputs/apk/release/geoip.clash.dev-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      
      
      
